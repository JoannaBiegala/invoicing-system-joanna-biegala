buildscript {
    ext {
        flywayVersion = '9.4.0'
        h2Version = '2.1.214'
        lombokVersion = '1.18.24'
        spockVersion = '2.3-groovy-3.0'
        springBootVersion = '2.7.3'
        springDependencyManagementVersion = '1.0.13.RELEASE'
        springFoxStarterVersion = '3.0.0'
        springFoxUiVersion = '3.0.0'
        postgresqlVersion = '42.5.0'
    }
}

plugins {
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'io.spring.dependency-management' version "${springDependencyManagementVersion}"
    id 'java'
    id 'groovy'
    id 'checkstyle'
    id 'jacoco'
}

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    compileOnly "org.flywaydb:flyway-core:${flywayVersion}"

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-jdbc"
    implementation "io.springfox:springfox-boot-starter:${springFoxStarterVersion}"
    implementation "io.springfox:springfox-swagger-ui:${springFoxUiVersion}"
    implementation "org.flywaydb:flyway-core:${flywayVersion}"

    runtimeOnly "com.h2database:h2:${h2Version}"
    runtimeOnly "org.postgresql:postgresql:${postgresqlVersion}"

    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"

    testImplementation "org.spockframework:spock-spring:${spockVersion}"
    testImplementation "org.spockframework:spock-core:${spockVersion}"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(14)
        vendor = JvmVendorSpec.ADOPTOPENJDK
    }
}

group = 'pl.futurecollars'
version = '0.0.1-SNAPSHOT'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

test {
    finalizedBy jacocoTestReport
    finalizedBy jacocoTestCoverageVerification
}

tasks.named('test') {
    useJUnitPlatform()
}

checkstyle {
    showViolations = true
    ignoreFailures = false
    maxWarnings = 0
    maxErrors = 0
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                counter = 'BRANCH'
                minimum = 0.80
            }
        }
        rule {
            limit {
                counter = 'LINE'
                minimum = 0.85
            }
        }
    }
}

jacocoTestReport {
    dependsOn test
}

task testWithFileDatabase(type: Test) {
    systemProperty 'spring.profiles.active', 'file'
    useJUnitPlatform()
}

task testWithMemoryDatabase(type: Test) {
    systemProperty 'spring.profiles.active', 'memory'
    useJUnitPlatform()
}

task testWithSqlDatabase(type: Test) {
    systemProperty 'spring.profiles.active', 'sql'
    useJUnitPlatform()
}

task testWithJpaDatabase(type: Test) {
    systemProperty 'spring.profiles.active', 'jpa'
    useJUnitPlatform()
}

check.dependsOn testWithFileDatabase
check.dependsOn testWithMemoryDatabase
check.dependsOn testWithSqlDatabase
//check.dependsOn testWithJpaDatabase
